[{"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\index.jsx":"1","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\App.jsx":"3","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Home\\Home.jsx":"4","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Register\\Register.jsx":"5","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Banner\\Banner.jsx":"6","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Login\\Login.jsx":"7","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\UtilityFunctions\\api.js":"8","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\PasswordReset\\PasswordReset.jsx":"9","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\ProductList\\ProductList.jsx":"10","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Products\\Product.jsx":"11","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\UserAccount\\UserAccount.jsx":"12","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\IndividualProduct\\IndividualProduct.jsx":"13","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Cart\\Cart.jsx":"14","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Stripe\\Stripe.jsx":"15","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\ItemAddedConfirmation\\CartConfirmation.jsx":"16","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Orders\\OrdersList.jsx":"17","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Orders\\Order.jsx":"18","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\UtilityFunctions\\history.js":"19"},{"size":520,"mtime":1646069236981,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1634231314725,"results":"22","hashOfConfig":"21"},{"size":2260,"mtime":1646138304501,"results":"23","hashOfConfig":"21"},{"size":156,"mtime":1646070826337,"results":"24","hashOfConfig":"21"},{"size":544,"mtime":1638468724471,"results":"25","hashOfConfig":"21"},{"size":5863,"mtime":1646145136783,"results":"26","hashOfConfig":"21"},{"size":3236,"mtime":1642615037890,"results":"27","hashOfConfig":"21"},{"size":4073,"mtime":1646145322091,"results":"28","hashOfConfig":"21"},{"size":114,"mtime":1638468724467,"results":"29","hashOfConfig":"21"},{"size":1820,"mtime":1646145847987,"results":"30","hashOfConfig":"21"},{"size":2674,"mtime":1645121259497,"results":"31","hashOfConfig":"21"},{"size":4637,"mtime":1642258623663,"results":"32","hashOfConfig":"21"},{"size":4692,"mtime":1644947511172,"results":"33","hashOfConfig":"21"},{"size":6535,"mtime":1644518324560,"results":"34","hashOfConfig":"21"},{"size":3550,"mtime":1645637400666,"results":"35","hashOfConfig":"21"},{"size":1439,"mtime":1644950430290,"results":"36","hashOfConfig":"21"},{"size":1100,"mtime":1645555633676,"results":"37","hashOfConfig":"21"},{"size":493,"mtime":1645555816353,"results":"38","hashOfConfig":"21"},{"size":87,"mtime":1646073374833,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"154plms",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\index.jsx",[],["87","88","89","90","91"],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\App.jsx",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Register\\Register.jsx",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Banner\\Banner.jsx",["92","93","94","95","96"],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Login\\Login.jsx",["97","98","99","100","101","102","103","104","105","106"],"import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { postData, setUser, submitLogin } from '../../UtilityFunctions/api';\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    const[userName, setUserName] = useState('');\r\n    const[password, setPassword] = useState('');\r\n    const[failedLogin, setFailedLogin] = useState(0);\r\n    const[errorMessage, setErrorMessage] = useState('');\r\n    const[token, setToken] = useState('');\r\n\r\n    const addQueuedItemsToCart = async () => {\r\n        console.log('addqueuedtocart');\r\n        const cart = JSON.parse(localStorage.getItem('cart'));\r\n        \r\n        console.log(cart);\r\n        if(!cart) return;\r\n        // const data = cart;\r\n        console.log(cart);\r\n        if(Array.isArray(cart)){\r\n            cart.map( async (item) => {\r\n                console.log('login postdata')\r\n                await postData('/carts/add-item', item)\r\n            })\r\n        }else{\r\n            console.log('login post data')\r\n            await postData('/carts/add-item', cart)\r\n        }\r\n    }\r\n\r\n    const handleSubmit= async (event) => {\r\n        event.preventDefault();\r\n        const successfulLogin = await submitLogin(userName.toLowerCase(), password);\r\n        console.log(successfulLogin)\r\n        if(successfulLogin === 401){\r\n            const failedLoginAttempts = failedLogin + 1;\r\n            setFailedLogin(failedLoginAttempts);\r\n            return;\r\n        }\r\n        \r\n        if(!successfulLogin){\r\n            setErrorMessage('Something went wrong with our servers.');\r\n            console.log(errorMessage);\r\n            return;\r\n        }\r\n\r\n        if(successfulLogin){\r\n            document.cookie = successfulLogin.data.token;\r\n            await addQueuedItemsToCart();\r\n            await setToken(successfulLogin.data);\r\n            console.log(successfulLogin);\r\n            await setUser(successfulLogin.data.user.id);\r\n            console.log(successfulLogin.data.token);\r\n            console.log(token);\r\n            document.cookie = successfulLogin.data.token;\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if(event.target.id === 'email'){\r\n            setUserName(event.target.value);\r\n        }else{\r\n            setPassword(event.target.value);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"login-page\">\r\n            <div className=\"login-details-container\">\r\n              <h2>Sign in</h2>\r\n              <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <input type='email' placeholder=\"Email\" id=\"email\" required onChange={handleChange}/>\r\n                <input type='password' placeholder=\"Password\" id=\"password\" required onChange={handleChange}/>\r\n                <input className=\"submit-button\" type=\"submit\"/>\r\n              </form>\r\n              <div className=\"password-reset-container\">\r\n              {failedLogin > 0 ? <p>Incorrect user details entered.</p> : <div />}\r\n                  <Link to=\"/password-reset\">Forgot Password</Link>\r\n                  <Link to=\"/register\">Register</Link>\r\n              </div>\r\n            </div>\r\n            {token ? <Redirect to='/home'/> : <div />}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\UtilityFunctions\\api.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\PasswordReset\\PasswordReset.jsx",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\ProductList\\ProductList.jsx",["134","135","136","137","138","139","140","141"],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Products\\Product.jsx",["142","143","144","145","146"],"import React, {useState}  from 'react';\r\nimport { Link, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './product.css';\r\nimport { getUser, postData } from '../../UtilityFunctions/api';\r\nimport CartConfirmation from '../ItemAddedConfirmation/CartConfirmation';\r\nimport cartImage from '../../Images/shopping-basket.png';\r\n\r\nconst Product = (props) => {\r\n    const {id, name, price, quantity, images} = props;\r\n    const [itemConfirmedModalOpen, setItemConfirmedModalOpen] = useState(false);\r\n    const image= `http://127.0.0.1:8000/`;\r\n    \r\n    const addToCart = async () => {\r\n        if(!getUser()){\r\n            console.log('user not logged in');\r\n            const cartProduct = {id, name, quantity: 1};\r\n            let existingCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            // const newItem = JSON.stringify(cartProduct);\r\n            if(!existingCart){ \r\n                existingCart = [];\r\n            }\r\n            existingCart.push(cartProduct);\r\n            console.log('cartObj')\r\n            console.log(cartProduct);\r\n            localStorage.setItem(\"cart\", JSON.stringify(existingCart));\r\n            setItemConfirmedModalOpen(true);\r\n            return;\r\n        }\r\n        const data = {\r\n            productId: id,\r\n            quantity: 1\r\n        };\r\n\r\n        await postData('/carts/add-item', data)\r\n       \r\n        setItemConfirmedModalOpen(true);\r\n    }\r\n    console.log(image);\r\n    return(\r\n        <div className=\"product-container\">\r\n            {console.log(props)}\r\n            <div className=\"product-container__top\">\r\n            {images.length > 0 && (<img src={`${image}${images[0].image_name}`} alt={name} />)}\r\n            <Switch>\r\n            <Link to={{pathname:`/product/${id}`}}><h3>{name.length > 20 ? `${name.substring(0,17)}...` : name}</h3></Link>\r\n            </Switch>\r\n            </div>\r\n            <div className=\"product-details\">\r\n                <p>£{price}</p>\r\n                <img role=\"presentation\" src={cartImage} onClick={addToCart} alt=\"add to cart\"/>\r\n                {quantity ? <h5>In Stock</h5> : <h5>Out of Stock</h5>}\r\n            </div>\r\n            {itemConfirmedModalOpen && (\r\n                <CartConfirmation itemConfirmedModalOpen={itemConfirmedModalOpen} setItemConfirmedModalOpen={setItemConfirmedModalOpen}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProduct.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    images: PropTypes.string,\r\n}\r\n\r\nProduct.defaultProps = {\r\n    images: ''\r\n}\r\n\r\nexport default Product;","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\UserAccount\\UserAccount.jsx",["147","148","149","150","151","152"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchUserData, updateUserData } from \"../../UtilityFunctions/api\";\r\nimport './userAccount.css'\r\n\r\nconst UserAccount = () => {\r\n    const [userData, setUserData] = useState(null);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [street, setStreet] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [postcode, setPostcode] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('use effect started')\r\n        fetchUserData().then((data) => {\r\n            console.log('use effect');\r\n\r\n            setUserData(data[0]);\r\n            \r\n            console.log(userData)\r\n            console.log('user data set')\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(!userData) return;\r\n        console.log('user data set after then')\r\n        setFirstName(userData.first_name);\r\n        setLastName(userData.last_name);\r\n        setCity(userData.city);\r\n        setStreet(userData.street);\r\n        setEmail(userData.email);\r\n        setPostcode(userData.post_code);\r\n    }, [userData])\r\n\r\n    const handleChange = (event) => {\r\n        const eventTarget = event.target.id;\r\n    \r\n        switch(eventTarget){\r\n            case 'email':\r\n                setEmail(event.target.value);\r\n                break;\r\n            case 'first-name':\r\n                setFirstName(event.target.value);\r\n                break;\r\n            case 'last-name':\r\n                setLastName(event.target.value);\r\n                break;\r\n            case 'city':\r\n                setCity(event.target.value);\r\n                break;\r\n            case 'street':\r\n                setStreet(event.target.value);\r\n                break;\r\n            case 'postcode':\r\n                setPostcode(event.target.value);\r\n                break;\r\n            default:\r\n                console.log('error, no matching target found.');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const data = {\r\n            email,\r\n            firstName,\r\n            lastName,\r\n            street,\r\n            city,\r\n            postcode,\r\n        }\r\n\r\n        const updated = await updateUserData(data);\r\n        if(updated){\r\n            setSubmitted(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {userData && (\r\n                <div className=\"user-account-container\">\r\n            <div className=\"page-heading\">\r\n                {userData ? <h1>{` Hello ${userData.first_name} ${userData.last_name}`}</h1> : <h1>No data</h1>}\r\n            </div>\r\n            <div className=\"details-container\">\r\n                <h2>My Details</h2>\r\n                    <label htmlFor=\"first-name\">First Name: <input placeholder={userData.first_name} id=\"first-name\" onChange={handleChange}/></label>\r\n                    <label htmlFor=\"last-name\">Last Name: <input placeholder={userData.last_name} id=\"last-name\" onChange={handleChange}/></label>\r\n                <div className=\"details-container\">\r\n                    <h2>Address</h2>\r\n                    <label htmlFor=\"street\">Street: <input placeholder={userData.street} id=\"street\" onChange={handleChange}/></label>\r\n                    <label htmlFor=\"city\">City: <input placeholder={userData.city} id=\"city\" onChange={handleChange}/></label>\r\n                    <label htmlFor=\"post-code\">Post Code: <input placeholder={userData.post_code} id=\"post-code\" onChange={handleChange}/></label>\r\n                </div>\r\n                <div className=\"details-container\">\r\n                    <h2>Login Details</h2>\r\n                    <label htmlFor=\"email\">Email: <input  type=\"email\" placeholder={userData.email} id=\"email\" onChange={handleChange}/></label>\r\n                    <label htmlFor=\"email-confirm\">Confirm New Email: <input  type=\"email\" placeholder='confirm new email' id=\"email-confirm\" onChange={handleChange}/></label>\r\n                </div>\r\n                <button type=\"submit\" onClick={handleSubmit}>Save Changes</button>\r\n                <Link to=\"password-reset\" className=\"link\">Reset Password</Link>\r\n                {submitted && (\r\n                    <div>\r\n                        <h2>Your Details Have Been Updated</h2>\r\n                        <button type=\"button\">Confirm</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAccount","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\IndividualProduct\\IndividualProduct.jsx",["153","154","155","156","157","158","159","160"],"import React, { useEffect, useState } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport PropTypes from 'prop-types';\r\nimport CartConfirmation from '../ItemAddedConfirmation/CartConfirmation';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { fetchProductData, getUser, postData } from '../../UtilityFunctions/api';\r\nimport './individualProduct.css';\r\nimport cartIcon from '../../Images/cart-icon.png';\r\n\r\n\r\nconst IndividualProduct = (props) => {\r\n    const {match} = props;\r\n    const imagePath= `http://127.0.0.1:8000/`;\r\n    const responsive = {\r\n    desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 3\r\n      },\r\n      tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2\r\n      },\r\n      mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1\r\n      }\r\n    };\r\n    const {id} = match.params;\r\n    const [product, setProduct] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [itemConfirmedModalOpen, setItemConfirmedModalOpen] = useState(false);\r\n    // const [id, setId] = useState();\r\n    // const {match} = props;\r\n    // useEffect(()=> {\r\n    //     setId(match.params.id);\r\n    // }, [match.params.id])\r\n    // console.log(id);\r\n    // const [product, setProduct] = useState({});\r\n    // TODO RENDER DATA AND THEN FIX API LIST TO USE 3 SEPERATE FUNCTIONS GET AND POST RESTRICTED AND GET UNRESTRICTED.\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        console.log(id);\r\n        fetchProductData(`products/id-search/${props.match.params.id}`).then((data)=>{\r\n            console.log(data);\r\n            if(!data) return;\r\n            if(!Array.isArray(data.data)) return;\r\n            setProduct(data.data[0]);\r\n            setIsLoading(false);\r\n        });\r\n    }, [id]);\r\n\r\n    const addToCart = async () => {\r\n        console.log('add to cart clicked');\r\n        if(!getUser()){\r\n            console.log('user not logged in');\r\n            const cartProduct = {id: product.id, name: product.name, quantity: 1};\r\n            let existingCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            // const newItem = JSON.stringify(cartProduct);\r\n            if(!existingCart){ \r\n                existingCart = [];\r\n            }\r\n            existingCart.push(cartProduct);\r\n            console.log('cartObj')\r\n            console.log(cartProduct);\r\n            localStorage.setItem(\"cart\", JSON.stringify(existingCart));\r\n            setItemConfirmedModalOpen(true);\r\n            return;\r\n        }\r\n        const data = {\r\n            productId: product.id,\r\n            quantity: 1\r\n        };\r\n        await postData('/carts/add-item', data)\r\n       \r\n        setItemConfirmedModalOpen(true);\r\n\r\n    }\r\n\r\n    console.log('product')\r\n    console.log(product);\r\n    return(\r\n        <div>\r\n            {isLoading ? (\r\n                <p>Loading</p>\r\n            ) :\r\n            <div className=\"individual-product-container\">\r\n                <h1>{product.name}</h1>\r\n                <div className=\"carousel-container\">\r\n                <Carousel responsive={responsive}\r\n                          containerClass=\"carousel-inner\"\r\n                          swipeable={false}\r\n                          >\r\n                        {product.productImage.map((image) =>                        \r\n                                <div className=\"carousel-image-container\" key={image.id}>\r\n                                    <img src={`${imagePath}${image.image_name}`} alt={product.name} className=\"individual-product-carousel-image\"/>\r\n                                </div>\r\n                        )}\r\n                </Carousel>\r\n                </div>\r\n                <div className=\"individual-product-container-bottom\">\r\n                    <h2>{`£${product.price}`}</h2>\r\n                    <h3>{product.quantity > 0 ? 'In Stock' : 'Out of Stock'}</h3>\r\n                    <p>{product.description}</p>\r\n                </div>\r\n                <button onClick={addToCart} type=\"button\" className=\"cart-button\">Add to Cart <img className=\"button-image\" src={cartIcon} alt=\"cart\" /></button>\r\n             {itemConfirmedModalOpen && (\r\n                 <CartConfirmation itemConfirmedModalOpen={itemConfirmedModalOpen} setItemConfirmedModalOpen={setItemConfirmedModalOpen}/>\r\n             )}\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nIndividualProduct.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            id: PropTypes.string.isRequired\r\n        }).isRequired\r\n    }).isRequired\r\n}\r\n\r\n// IndividualProduct.defaultProps = {\r\n//     images: '',\r\n// }\r\n\r\nexport default IndividualProduct;","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Cart\\Cart.jsx",["161","162","163","164","165","166","167","168","169","170","171","172"],"import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { deleteData, fetchDataProtected } from \"../../UtilityFunctions/api\";\r\nimport Stripe from \"../Stripe/Stripe\";\r\nimport deleteIcon from \"../../Images/delete-icon.svg\";\r\nimport './cart.css';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    overlay: {zIndex: 1000}\r\n    \r\n  };\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [checkoutModalOpen, setCheckoutModalOpen] = useState(false);\r\n    const shippingCost = 2.99;\r\n    const [totalShippingCost, setTotalShippingCost] = useState(0);\r\n    const [cartCost, setCartCost] = useState(0);\r\n    const [paymentComplete, setPaymentComplete] = useState(false);\r\n    // const [openConfirmModal, setOpenConfirmModal] = useState(false);\r\n    // const [shouldRedirect, setShouldRedirect] = useState(false);\r\n\r\n    const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n    console.log(process.env.REACT_APP_STRIPE_KEY);\r\n    \r\n    const cartTotal = (cart) => {\r\n        console.log('cartTotal callled');\r\n        let total = 0;\r\n        cart.forEach((item) => {\r\n            console.log(item.price);\r\n            total += (item.price * item.quantity_ordered) ;\r\n        });\r\n        setCartCost(total.toFixed(2));\r\n    }\r\n\r\n    const calcTotalShippingCost = (cart) => {\r\n        const cost = shippingCost * cart.length;\r\n        setTotalShippingCost(cost.toFixed(2));\r\n    }\r\n\r\n    const orderTotal = () => {\r\n       const result = Number(totalShippingCost) + Number(cartCost);\r\n       return result.toFixed(2);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log('cart use effect running')           \r\n        fetchDataProtected('carts/active-cart').then((response)=>{\r\n            if(response){\r\n                console.log(response.data)\r\n                setCartItems(response.data);\r\n                setIsLoading(false);\r\n                cartTotal(response.data);\r\n                calcTotalShippingCost(response.data);\r\n            }\r\n        }).catch((error)=> {\r\n            console.log(error);\r\n        })\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     setOpenConfirmModal(true)\r\n    // }, [paymentComplete]);\r\n\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n      }\r\n    \r\n      function closeModal() {\r\n        setPaymentComplete(false);\r\n      }\r\n    \r\n    const deleteCartItem = async (itemId) => {\r\n        console.log('delete cart item');\r\n        console.log(itemId);\r\n        const data = {productId: itemId}\r\n        deleteData('/carts/remove-item', data).then((response) => {\r\n            console.log(response);\r\n            if(response){\r\n                setCartItems(response.data);\r\n                setIsLoading(false);\r\n                cartTotal(response.data);\r\n                calcTotalShippingCost(response.data);\r\n            }\r\n        });   \r\n    }\r\n\r\n    const openCheckoutModal = () => {\r\n        setCheckoutModalOpen(true);\r\n    }\r\n\r\n    const closeCheckoutModal = () => {\r\n        setCheckoutModalOpen(false);\r\n    }\r\n\r\n    const closePaymentModal = async () => {\r\n        fetchDataProtected('carts/active-cart').then((response)=>{\r\n            if(response){\r\n                console.log(response.data)\r\n                setCartItems(response.data);\r\n                setIsLoading(false);\r\n                cartTotal(response.data);\r\n                calcTotalShippingCost(response.data);\r\n                window.location.href = '/home';\r\n            }\r\n        }).catch((error)=> {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"cart-container\">\r\n            {!isLoading && (\r\n                <div>\r\n                    <h1>cart</h1>\r\n                    <table className=\"cart-list\">\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            <th>Remove</th>\r\n                        </tr>\r\n                {cartItems.map((item) => {\r\n                    console.log(item.name);\r\n                    return(\r\n                    <tr key={item.product_id} className=\"cart-item-container\">\r\n                        <td>{item.name}</td>\r\n                        <td>{item.quantity_ordered}</td>\r\n                        {/* {item.images && item.images.length > 0 && (<img src={`${image}${item.images[0].image_name}`} alt={item.name} />)} */}\r\n                        <td>£{item.price}</td>\r\n                        <td><img src={deleteIcon} onClick={()=> deleteCartItem(item.product_id)} role=\"presentation\" id={item.product_id} alt=\"delete\"/></td>\r\n                    </tr>\r\n                    )\r\n                })}\r\n                </table>\r\n                <div className=\"order-summary\">\r\n                    <h4>Cart Total: £{cartCost}</h4>\r\n                    <h4>Shipping Total: £{totalShippingCost}</h4>\r\n                    <h4>Order Total: £{orderTotal()}</h4>\r\n                </div>\r\n                <button onClick={() => openCheckoutModal()} type=\"button\" className=\"cart-button\">Checkout</button>\r\n            </div>\r\n            \r\n            )}\r\n           {checkoutModalOpen && (\r\n               <Elements stripe={stripePromise}>\r\n                <Stripe modalIsOpen={checkoutModalOpen} setModalClosed={closeCheckoutModal} setPaymentComplete={setPaymentComplete}/>\r\n               </Elements>\r\n           )}\r\n           {paymentComplete && (\r\n            <Modal\r\n                modalIsOpen={paymentComplete}\r\n                isOpen={paymentComplete}\r\n                onRequestClose={() => closeModal}\r\n                onAfterOpen={() => afterOpenModal}\r\n                style={customStyles}\r\n                contentLabel=\"Payment Modal\"\r\n                >\r\n                <h2>Payment Complete</h2>\r\n                    <button onClick={closePaymentModal} type=\"button\" className=\"modal-button\">Okay</button>\r\n             </Modal>\r\n           )}\r\n     \r\n        {/* {shouldRedirect && (\r\n            <Redirect to=\"/my-orders\" />\r\n        )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Stripe\\Stripe.jsx",["173","174","175","176","177"],"import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\r\nimport propTypes from 'prop-types';\r\nimport './stripe.css';\r\nimport { postData } from '../../UtilityFunctions/api';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    overlay: {zIndex: 1000}\r\n    \r\n  };\r\n\r\n//   Modal.setAppElement('#App');\r\n\r\nconst Stripe = (props) => {\r\n\r\n    const [cardHolderName, setCardHolderName] = React.useState('');\r\n    const [paymentError, setPaymentError] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const {setModalClosed, setPaymentComplete} = props;\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    // function openModal() {\r\n    //     setIsOpen(true);\r\n    //   }\r\n    \r\n      function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n      }\r\n    \r\n      function closeModal() {\r\n        setModalClosed(false);\r\n      }\r\n\r\n    const handleOnChange = (event) => {\r\n        setCardHolderName(event.target.value);\r\n    }\r\n\r\n    // const confirmPayment = () => {\r\n    //     console.log('payment confirmed')\r\n\r\n    //     // setPaymentComplete(true);\r\n    // }\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log('handle submit');\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement),\r\n        });\r\n\r\n        if(error){\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setPaymentError(error.message);\r\n        }else{\r\n            const data = {\r\n                cardHolderName,\r\n                paymentMethod\r\n            }\r\n            console.log(\"Stripe 23 | token generated!\", paymentMethod);\r\n            const submitOrder = await postData('/carts/checkout', data);\r\n            console.log(submitOrder)\r\n\r\n            if(submitOrder.error){\r\n                console.log(submitOrder.error);\r\n                setPaymentError(submitOrder.error.message);\r\n                setIsLoading(false);\r\n            }else{\r\n                setIsLoading(false);\r\n                setModalClosed(true);\r\n                setPaymentComplete(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const {modalIsOpen} = props;\r\n    return (\r\n        <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={() => afterOpenModal}\r\n        onRequestClose={() => closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Payment Modal\"\r\n        >\r\n        <div className='payment-form-container'>\r\n            <h1>Complete Payment</h1>\r\n            <input type='text' placeholder=\"Name on Card\" id=\"cardholder-name\" required onChange={handleOnChange}/>\r\n            <CardElement />\r\n            <button type=\"submit\" onClick={handleSubmit}>{isLoading ? 'Loading...' : 'Pay'}</button>\r\n        {paymentError && (\r\n            <span>{paymentError}</span>\r\n        )} \r\n        <button type=\"button\" onClick={()=>setModalClosed(true)}>Cancel</button>\r\n        </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nStripe.propTypes = {\r\n    modalIsOpen: Boolean.isRequired,\r\n    setModalClosed: propTypes.func.isRequired,\r\n    setPaymentComplete: propTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Stripe","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\ItemAddedConfirmation\\CartConfirmation.jsx",["178"],"import propTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport closeIcon from '../../Images/close-menu.svg';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    overlay: {zIndex: 1000}\r\n    \r\n  };\r\n\r\n\r\nconst CartConfirmation = (props) => {\r\n    const {itemConfirmedModalOpen, setItemConfirmedModalOpen} = props;\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setItemConfirmedModalOpen(false), 5000);\r\n\r\n        return() => clearTimeout(timer);\r\n    });\r\n\r\n    function afterOpenModal() {\r\n\r\n    }\r\n\r\n    function closeModal() {\r\n        console.log('closeModal clicked')\r\n        setItemConfirmedModalOpen(false);\r\n      }\r\n\r\n    return(\r\n        <Modal\r\n        isOpen={itemConfirmedModalOpen}\r\n        onAfterOpen={() => afterOpenModal}\r\n        onRequestClose={() => closeModal}\r\n        style={customStyles}\r\n        >\r\n            <div>\r\n                <img role=\"presentation\" src={closeIcon} onClick={closeModal} alt=\"menu\" />\r\n            </div>\r\n            <h2>Item Added to Cart</h2>\r\n        </Modal>\r\n    )\r\n} \r\n\r\nCartConfirmation.propTypes = {\r\n    itemConfirmedModalOpen: Boolean.isRequired,\r\n    setItemConfirmedModalOpen: propTypes.func.isRequired,\r\n}\r\n\r\nexport default CartConfirmation;","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Orders\\OrdersList.jsx",["179","180"],"import React, { useEffect, useState } from 'react';\r\nimport { fetchDataProtected } from '../../UtilityFunctions/api';\r\nimport Order from './Order'\r\n\r\nconst OrdersList = () => {\r\n    const [orderData, setOrderData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchDataProtected('orders/all').then((response)=>{\r\n            console.log(response);\r\n            if(response){\r\n                setOrderData(response.data);\r\n                setIsLoading(false);\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"orders-list-container\">\r\n        <h1>My Past Orders</h1>\r\n            {!isLoading && (\r\n                orderData.length > 0 ? (orderData.map((order) => \r\n                    <Order orderCode={order.stripe_confirmation} orderDate ={order.date_ordered} totalCost={order.total_cost}/>\r\n                    )\r\n                ) : <p>No order history</p>\r\n            )     \r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersList;","C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\Components\\Orders\\Order.jsx",[],"C:\\Users\\jackm\\e-commerce-frontend\\e-commerce-frontend\\src\\UtilityFunctions\\history.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":26,"column":9,"nodeType":"193","messageId":"194","endLine":26,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":41,"column":9,"nodeType":"193","messageId":"194","endLine":41,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":43,"column":13,"nodeType":"193","messageId":"194","endLine":43,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":47,"column":13,"nodeType":"193","messageId":"194","endLine":47,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":58,"column":9,"nodeType":"193","messageId":"194","endLine":58,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":14,"column":9,"nodeType":"193","messageId":"194","endLine":14,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":17,"column":9,"nodeType":"193","messageId":"194","endLine":17,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":20,"column":9,"nodeType":"193","messageId":"194","endLine":20,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":23,"column":17,"nodeType":"193","messageId":"194","endLine":23,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":27,"column":13,"nodeType":"193","messageId":"194","endLine":27,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":35,"column":9,"nodeType":"193","messageId":"194","endLine":35,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":44,"column":13,"nodeType":"193","messageId":"194","endLine":44,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":52,"column":13,"nodeType":"193","messageId":"194","endLine":52,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":54,"column":13,"nodeType":"193","messageId":"194","endLine":54,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":55,"column":13,"nodeType":"193","messageId":"194","endLine":55,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":7,"column":5,"nodeType":"193","messageId":"194","endLine":7,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":9,"column":5,"nodeType":"193","messageId":"194","endLine":9,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":13,"column":5,"nodeType":"193","messageId":"194","endLine":13,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":14,"column":5,"nodeType":"193","messageId":"194","endLine":14,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":28,"column":9,"nodeType":"193","messageId":"194","endLine":28,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":29,"column":9,"nodeType":"193","messageId":"194","endLine":29,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":31,"column":9,"nodeType":"193","messageId":"194","endLine":31,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":40,"column":9,"nodeType":"193","messageId":"194","endLine":40,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":41,"column":9,"nodeType":"193","messageId":"194","endLine":41,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":43,"column":9,"nodeType":"193","messageId":"194","endLine":43,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":71,"column":9,"nodeType":"193","messageId":"194","endLine":71,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":73,"column":13,"nodeType":"193","messageId":"194","endLine":73,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":74,"column":13,"nodeType":"193","messageId":"194","endLine":74,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":77,"column":9,"nodeType":"193","messageId":"194","endLine":77,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":80,"column":9,"nodeType":"193","messageId":"194","endLine":80,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":86,"column":5,"nodeType":"193","messageId":"194","endLine":86,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":87,"column":5,"nodeType":"193","messageId":"194","endLine":87,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":90,"column":5,"nodeType":"193","messageId":"194","endLine":90,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":95,"column":5,"nodeType":"193","messageId":"194","endLine":95,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":96,"column":5,"nodeType":"193","messageId":"194","endLine":96,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":97,"column":5,"nodeType":"193","messageId":"194","endLine":97,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":99,"column":5,"nodeType":"193","messageId":"194","endLine":99,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":103,"column":5,"nodeType":"193","messageId":"194","endLine":103,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":114,"column":13,"nodeType":"193","messageId":"194","endLine":114,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":125,"column":5,"nodeType":"193","messageId":"194","endLine":125,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":126,"column":5,"nodeType":"193","messageId":"194","endLine":126,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":128,"column":5,"nodeType":"193","messageId":"194","endLine":128,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":10,"column":5,"nodeType":"193","messageId":"194","endLine":10,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":15,"column":9,"nodeType":"193","messageId":"194","endLine":15,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":16,"column":9,"nodeType":"193","messageId":"194","endLine":16,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":17,"column":9,"nodeType":"193","messageId":"194","endLine":17,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":27,"column":9,"nodeType":"193","messageId":"194","endLine":27,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":28,"column":9,"nodeType":"193","messageId":"194","endLine":28,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":30,"column":13,"nodeType":"193","messageId":"194","endLine":30,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":35,"column":13,"nodeType":"193","messageId":"194","endLine":35,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":16,"column":13,"nodeType":"193","messageId":"194","endLine":16,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":24,"column":13,"nodeType":"193","messageId":"194","endLine":24,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":25,"column":13,"nodeType":"193","messageId":"194","endLine":25,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":39,"column":5,"nodeType":"193","messageId":"194","endLine":39,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":42,"column":14,"nodeType":"193","messageId":"194","endLine":42,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":17,"column":9,"nodeType":"193","messageId":"194","endLine":17,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":19,"column":13,"nodeType":"193","messageId":"194","endLine":19,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":23,"column":13,"nodeType":"193","messageId":"194","endLine":23,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":24,"column":13,"nodeType":"193","messageId":"194","endLine":24,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":31,"column":9,"nodeType":"193","messageId":"194","endLine":31,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":63,"column":17,"nodeType":"193","messageId":"194","endLine":63,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":42,"column":9,"nodeType":"193","messageId":"194","endLine":42,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":44,"column":13,"nodeType":"193","messageId":"194","endLine":44,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":53,"column":9,"nodeType":"193","messageId":"194","endLine":53,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":55,"column":13,"nodeType":"193","messageId":"194","endLine":55,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":63,"column":13,"nodeType":"193","messageId":"194","endLine":63,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":64,"column":13,"nodeType":"193","messageId":"194","endLine":64,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":79,"column":5,"nodeType":"193","messageId":"194","endLine":79,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":80,"column":5,"nodeType":"193","messageId":"194","endLine":80,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":37,"column":5,"nodeType":"193","messageId":"194","endLine":37,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":40,"column":9,"nodeType":"193","messageId":"194","endLine":40,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":43,"column":13,"nodeType":"193","messageId":"194","endLine":43,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":60,"column":9,"nodeType":"193","messageId":"194","endLine":60,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":63,"column":17,"nodeType":"193","messageId":"194","endLine":63,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":70,"column":13,"nodeType":"193","messageId":"194","endLine":70,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":89,"column":9,"nodeType":"193","messageId":"194","endLine":89,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":90,"column":9,"nodeType":"193","messageId":"194","endLine":90,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":93,"column":13,"nodeType":"193","messageId":"194","endLine":93,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":114,"column":17,"nodeType":"193","messageId":"194","endLine":114,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":122,"column":13,"nodeType":"193","messageId":"194","endLine":122,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":139,"column":21,"nodeType":"193","messageId":"194","endLine":139,"endColumn":32},{"ruleId":"191","severity":1,"message":"192","line":55,"column":9,"nodeType":"193","messageId":"194","endLine":55,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":64,"column":13,"nodeType":"193","messageId":"194","endLine":64,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":72,"column":13,"nodeType":"193","messageId":"194","endLine":72,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":74,"column":13,"nodeType":"193","messageId":"194","endLine":74,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":77,"column":17,"nodeType":"193","messageId":"194","endLine":77,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":34,"column":9,"nodeType":"193","messageId":"194","endLine":34,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":11,"column":13,"nodeType":"193","messageId":"194","endLine":11,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":17,"column":13,"nodeType":"193","messageId":"194","endLine":17,"endColumn":24},"lines-around-directive",["195"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]